{"version":3,"file":"static/webpack/static/development/pages/index.js.361a94274acfc481ddef.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["/* @jsx jsx */\nimport React, { useState, useEffect, useRef } from 'react';\nimport Head from 'next/head';\nimport theme from '../parts/theme';\nimport { jsx } from 'theme-ui';\nimport { ThemeProvider } from 'theme-ui';\n\nconst Home = () => {\n  let [j_pressed, setJPress] = useState(false);\n  let [k_pressed, setKPress] = useState(false);\n  let [l_pressed, setLPress] = useState(false);\n  let [semicolon_pressed, setSemicolonPress] = useState(false);\n  let [a_pressed, setAPress] = useState(false);\n  let [s_pressed, setSPress] = useState(false);\n  let [d_pressed, setDPress] = useState(false);\n  let [dimensions, setDimensions] = useState([null, null]);\n  let [coordinates, setCoordinates] = useState([0, 0]);\n\n  let canvasRef = useRef(null);\n\n  function downHandler(e) {\n    switch (e.key) {\n      case 'j':\n        setJPress(true);\n        break;\n      case 'k':\n        setKPress(true);\n        break;\n      case 'l':\n        setLPress(true);\n        break;\n      case ';':\n        setSemicolonPress(true);\n        break;\n      case 'a':\n        setAPress(true);\n        break;\n      case 's':\n        setSPress(true);\n        break;\n      case 'd':\n        setDPress(true);\n        break;\n    }\n  }\n  function upHandler(e) {\n    switch (e.key) {\n      case 'j':\n        setJPress(false);\n        break;\n      case 'k':\n        setKPress(false);\n        break;\n      case 'l':\n        setLPress(false);\n        break;\n      case ';':\n        setSemicolonPress(false);\n        break;\n      case 'a':\n        setAPress(false);\n        break;\n      case 's':\n        setSPress(false);\n        break;\n      case 'd':\n        setDPress(false);\n        break;\n    }\n  }\n\n  // useEffect(() => {\n  //   if (j_pressed) {\n  //     console.log('j pressed');\n  //   }\n  // }, [j_pressed]);\n\n  let key_map = {\n    j: { val: j_pressed, set: setJPress },\n    k: { val: k_pressed, set: setKPress },\n    l: { val: l_pressed, set: setLPress },\n    ';': { val: semicolon_pressed, set: setSemicolonPress },\n    a: { val: a_pressed, set: setAPress },\n    s: { val: s_pressed, set: setSPress },\n    d: { val: d_pressed, set: setDPress },\n  };\n\n  function setWindowSize() {\n    setDimensions([window.innerWidth, window.innerHeight]);\n  }\n\n  useEffect(() => {\n    setWindowSize();\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    function render() {\n      console.log(j_pressed);\n      ctx.strokeStyle = 'pink';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(coordinates[0], coordinates[0], 10, 10);\n      requestAnimationFrame(render);\n    }\n    let runner = requestAnimationFrame(render);\n    return () => {\n      cancelAnimationFrame(runner);\n    };\n  }, [coordinates, j_pressed]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <style jsx global>{`\n          * {\n            box-sizing: border-box;\n          }\n          html {\n            font-family: ${theme.fonts.body};\n            font-size: ${theme.fontSizes[0]}px;\n            background: ${theme.colors.background};\n            line-height: ${theme.lineHeights.body};\n          }\n          body {\n            margin: 0;\n          }\n          textarea {\n            font-family: inherit;\n            font-size: inherit;\n            line-height: inherit;\n          }\n        `}</style>\n\n        <Head>\n          <title>Etch</title>\n        </Head>\n        <canvas\n          ref={canvasRef}\n          sx={{ background: 'white' }}\n          width={dimensions[0]}\n          height={dimensions[1] - 2 * theme.space[0]}\n          css={{ display: dimensions[0] !== null ? 'block' : 'none' }}\n        />\n        <div\n          style={{\n            display: 'flex',\n            position: 'fixed',\n            bottom: theme.space[1],\n            left: '1.5ch',\n            right: '1.5ch',\n          }}\n        >\n          <div\n            style={{\n              display: 'flex',\n              width: '100%',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div sx={{ display: 'flex' }}>\n              {'asd'.split('').map(l => (\n                <div\n                  sx={{\n                    position: 'relative',\n                    width: '2ch',\n                    textAlign: 'center',\n                    background: key_map[l].val ? 'pink' : 'transparent',\n                  }}\n                >\n                  {l}\n                  <div\n                    css={{\n                      position: 'absolute',\n                      left: -0.5,\n                      top: -0.5,\n                      right: -0.5,\n                      bottom: -0.5,\n                      border: 'solid 1px black',\n                      pointerEvents: 'none',\n                    }}\n                  />\n                </div>\n              ))}\n            </div>\n            <div style={{ display: 'flex' }}>\n              {'jkl;'.split('').map(l => (\n                <div\n                  sx={{\n                    position: 'relative',\n                    width: '2ch',\n                    textAlign: 'center',\n                    background: key_map[l].val ? 'pink' : 'transparent',\n                  }}\n                >\n                  {l}\n                  <div\n                    css={{\n                      position: 'absolute',\n                      left: -0.5,\n                      top: -0.5,\n                      right: -0.5,\n                      bottom: -0.5,\n                      border: 'solid 1px black',\n                      pointerEvents: 'none',\n                    }}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AArBA;AAuBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AArBA;AAuBA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAPA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AA6BA;AACA;AACA;;;;A","sourceRoot":""}