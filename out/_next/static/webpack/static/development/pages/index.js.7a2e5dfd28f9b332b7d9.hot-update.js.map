{"version":3,"file":"static/webpack/static/development/pages/index.js.7a2e5dfd28f9b332b7d9.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["/* @jsx jsx */\nimport React, { useState, useEffect, useRef } from 'react';\nimport Head from 'next/head';\nimport theme from '../parts/theme';\nimport { jsx } from 'theme-ui';\nimport { ThemeProvider } from 'theme-ui';\nimport { requestInterval } from '../parts/utils';\n\nObject.fromEntries = arr =>\n  Object.assign({}, ...Array.from(arr, ([k, v]) => ({ [k]: v })));\n\nconst Home = () => {\n  let [dimensions, setDimensions] = useState([null, null]);\n  let canvasRef = useRef();\n  let overlayCanvasRef = useRef();\n  let requestRef = useRef();\n  let keymap = useRef({});\n  let coordinates = useRef([0, 0]);\n\n  function keyAction(key) {\n    let current = coordinates.current;\n\n    let ctx = canvasRef.current.getContext('2d');\n    ctx.fillStyle = 'black';\n\n    let octx = overlayCanvasRef.current.getContext('2d');\n    octx.fillStyle = 'pink';\n\n    let size = 10;\n    let inc = size;\n    let modify = [0, 0];\n    if (keymap.current['j']) modify[1] += inc;\n    if (keymap.current['k']) modify[1] += -inc;\n    if (keymap.current['h']) modify[0] += -inc;\n    if (keymap.current['l']) modify[0] += inc;\n\n    coordinates.current = [current[0] + modify[0], current[1] + modify[1]];\n\n    ctx.fillRect(coordinates.current[0], coordinates.current[1], size, size);\n\n    octx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n    octx.fillRect(coordinates.current[0], coordinates.current[1], size, size);\n  }\n\n  function downHandler(e) {\n    keymap.current[e.key] = true;\n    keyAction();\n  }\n\n  function upHandler(e) {\n    keymap.current[e.key] = false;\n  }\n\n  function setWindowSize() {\n    setDimensions([window.innerWidth, window.innerHeight]);\n  }\n\n  useEffect(() => {\n    setWindowSize();\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, []);\n\n  useEffect(() => {\n    // let octx = overlayCanvasRef.current.getContext('2d');\n    // octx.fillStyle = 'pink';\n    // let ctx = canvasRef.current.getContext('2d');\n    // function update() {\n    //   let modify = [0, 0];\n    //   let inc = 5;\n    //   if (keys_pressed.current['h']) modify[0] += -inc;\n    //   if (keys_pressed.current['j']) modify[1] += inc;\n    //   if (keys_pressed.current['k']) modify[1] += -inc;\n    //   if (keys_pressed.current['l']) modify[0] += inc;\n    //   let current = coordinates.current;\n    //   coordinates.current = [current[0] + modify[0], current[1] + modify[1]];\n    //   octx.clearRect(0, 0, dimensions[0], dimensions[1]);\n    //   octx.fillRect(current[0], current[1], 5, 5);\n    //   if (keys_pressed.current['d']) {\n    //     ctx.fillRect(current[0], current[1], 5, 5);\n    //   }\n    // }\n    // requestRef.current = requestInterval(update, 50);\n    // return () => {\n    //   cancelAnimationFrame(requestRef.current);\n    // };\n  }, [dimensions]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <style jsx global>{`\n          * {\n            box-sizing: border-box;\n          }\n          html {\n            font-family: ${theme.fonts.body};\n            font-size: ${theme.fontSizes[0]}px;\n            background: ${theme.colors.background};\n            line-height: ${theme.lineHeights.body};\n          }\n          body {\n            margin: 0;\n          }\n          textarea {\n            font-family: inherit;\n            font-size: inherit;\n            line-height: inherit;\n          }\n        `}</style>\n\n        <Head>\n          <title>Etch</title>\n        </Head>\n        <canvas\n          ref={canvasRef}\n          sx={{ background: 'white' }}\n          width={dimensions[0]}\n          height={dimensions[1]}\n          css={{\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            display: dimensions[0] !== null ? 'block' : 'none',\n          }}\n        />\n        <canvas\n          ref={overlayCanvasRef}\n          sx={{ background: 'transparent' }}\n          width={dimensions[0]}\n          height={dimensions[1]}\n          css={{\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            display: dimensions[0] !== null ? 'block' : 'none',\n          }}\n        />\n\n        <div\n          style={{\n            display: 'none',\n            position: 'fixed',\n            bottom: theme.space[1],\n            left: '1.5ch',\n            right: '1.5ch',\n          }}\n        >\n          <div\n            style={{\n              display: 'flex',\n              width: '100%',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div sx={{ display: 'flex' }}>\n              {'xsd'.split('').map(l => (\n                <div\n                  sx={{\n                    position: 'relative',\n                    width: '2ch',\n                    textAlign: 'center',\n                    // background: keys_pressed.current[l]\n                    //   ? 'pink'\n                    //   : 'transparent',\n                  }}\n                >\n                  {l}\n                  <div\n                    css={{\n                      position: 'absolute',\n                      left: -0.5,\n                      top: -0.5,\n                      right: -0.5,\n                      bottom: -0.5,\n                      border: 'solid 1px black',\n                      pointerEvents: 'none',\n                    }}\n                  />\n                </div>\n              ))}\n            </div>\n            <div style={{ display: 'flex' }}>\n              {'hjkl'.split('').map(l => (\n                <div\n                  sx={{\n                    position: 'relative',\n                    width: '2ch',\n                    textAlign: 'center',\n                    // background: keys_pressed.current[l]\n                    //   ? 'pink'\n                    //   : 'transparent',\n                  }}\n                >\n                  {l}\n                  <div\n                    css={{\n                      position: 'absolute',\n                      left: -0.5,\n                      top: -0.5,\n                      right: -0.5,\n                      bottom: -0.5,\n                      border: 'solid 1px black',\n                      pointerEvents: 'none',\n                    }}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AADA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AA+BA;AACA;AACA;;;;A","sourceRoot":""}